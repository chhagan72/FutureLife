pipeline {
    agent any

    stages {
        stage("Git Checkout") {
            steps {
                echo "Cloning the code"
                git url: "https://github.com/chhagan72/futurelife.git", branch: "main"
            }
        }

        stage("Build") {
            steps {
                echo "Building the Docker image"
                sh "docker build -t futurelife ."
            }
        }
        stage('SonarQube Analysis') {
            environment {
                    // Set environment variables required for SonarQube scanner
                SONAR_SCANNER_HOME = tool 'sonar'
            }
            steps {
                    // Run SonarQube scanner
                script {
                    withSonarQubeEnv(credentialsId: 'sonarqube') {
                        // sh "${env.SONAR_SCANNER_HOME}/bin/sonar-scanner"
                        sh """
                            ${env.SONAR_SCANNER_HOME}/bin/sonar-scanner \
                            -Dsonar.projectKey=futurelife \
                            -Dsonar.projectName='Future Life' \
                            -Dsonar.projectVersion=1.0 \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=http://15.206.125.113:9000 \
                            -Dsonar.login=sonarqube
                        """
                    }
                }
            }
        }

        stage("Push to Docker Hub") {
            steps {
                echo "Pushing the Docker image to Docker Hub"
    //             withDockerRegistry(credentialsId: 'docker') {
    //                 sh "docker tag futurelife:latest chhagan72/futurelife:latest"
    //                 sh "docker push chhagan72/futurelife:latest"
    // // some block
    //             }
                withCredentials([usernamePassword(credentialsId: "docker", passwordVariable: "dockerHubPass", usernameVariable: "dockerHubUser")]) {
                    sh "docker tag futurelife ${env.dockerHubUser}/futurelife:latest"
                    sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPass}"
                    sh "docker push ${env.dockerHubUser}/futurelife:latest"
                }
            }   
        }

        stage("Deploy on docker container") {
            steps {
                echo "Deploying the container"
                sh "docker-compose down && docker-compose up -d"
            }
        }
    }
}