# version: "3.3"
# services:
#   mongodb:
#     image: mongo:6-jammy
#     volumes:
#       - ./init-db:/docker-entrypoint-initdb.d
#       - ./data-db:/data/db
#     networks:
#       - twotier
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: mongoadmin
#       MONGO_INITDB_DATABASE: django_mongodb_docker
#     ports:
#       - '27017:27017'
#   web:
#     image: ckrathode/futurelife:latest
#     environment:
#       - MONGODB_URL=mongodb://mongodb:27017/
#     ports:
#       - "8000:8000"
#     volumes:
#       - .:/django_mongodb_docker
#     networks:
#       - twotier


# volumes:
#   dbdata6:
# networks:
#   twotier:



# version: '3.3'

# volumes:
#   init-db:
#   data-db:

# services:
#   mongodb:
#     image: mongo:6-jammy
#     restart: unless-stopped
#     volumes:
#       - ./init-db:/docker-entrypoint-initdb.d
#       - ./data-db:/data/db
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: mongoadmin
#       MONGO_INITDB_DATABASE: django_mongodb_docker
#     ports:
#       - 27017:27017

#   mongo-express:
#     image: mongo-express
#     restart: unless-stopped
#     ports:
#       - 8081:8081
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadmin

#   web:
#     image: ckrathode/futurelife:latest
#     restart: unless-stopped
#     environment:
#       - MONGODB_URL=mongodb://mongodb:27017/
#     command: python3 manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/django_mongodb_docker
#     ports:
#       - 8000:8000
#     links:
#       - mongodb
#     depends_on:
#       - migration

#   migration:
#     build: .
#     image: ckrathode/futurelife:latest
#     command: python manage.py migrate
#     volumes:
#       - .:/django_mongodb_docker
#     links:
#       - mongodb
#     depends_on:
#       - make_migrations

#   make_migrations:
#     build: .
#     image: ckrathode/futurelife:latest
#     command: python manage.py makemigrations
#     volumes:
#       - .:/django_mongodb_docker
#     links:
#       - mongodb
#     depends_on:
#       - mongodb




# version: "3.9"

# services:
#   mongo_db:
#     container_name: mongodb_container
#     image: mongo:latest
#     restart: always
#     hostname: mongodb
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_db:/data/db
#     environment:
#       MONGO_INITDB_DATABASE: Ck_Db
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: admin

#   django:
#     image: ckrathode/futurelife:latest
#     environment:
#       MONGODB_URI: mongodb://mongo_db:27017
#       DB_NAME: Ck_Db
#       NAME: ck
#     command:
#       sh -c "
#       python manage.py makemigrations &&
#       python manage.py migrate &&
#       python manage.py runserver 0.0.0.0:8000
#       "
#     volumes:
#       - .:/code
#     ports:
#       - "8000:8000"
#     depends_on:
#       mongo_db:




version: '3'

services:

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    env_file: .env
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
      - MONGO_INITDB_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_INITDB_PASSWORD=${MONGO_DB_PASSWORD}
    volumes:
      - ${PWD}/_data/mongo:/data/db
      - ${PWD}/docker/_mongo/fixtures:/import
      - ${PWD}/docker/_mongo/scripts/init.sh:/docker-entrypoint-initdb.d/setup.sh
    ports:
      - 27017:27017

  postgres:
    container_name: postgres:latest
    image: postgres:12
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=app_db_user
      - POSTGRES_PASSWORD=supersecretpassword
      - POSTGRES_PORT=5432
    ports:
      - 5432:5432
    volumes:
      - ${PWD}/_data/postgres:/var/lib/postgresql/data
      - ${PWD}/docker/_postgres/scripts/create_test_db.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  redis:
    image: redis:6
    container_name: redis
    restart: always
    env_file: .env
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - ${PWD}/_data/redis:/var/lib/redis

  app:
    build: ./app
    image: ckrathode/futurelife:latest
    container_name: app
    restart: always
    # command: "python manage.py runserver 0.0.0.0:8000"
    command:
        sh -c "python manage.py wait_for_db &&
               python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - ${PWD}/app:/app
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis

  # celery:
  #   build: ./app
  #   image: app:latest
  #   container_name: celery
  #   restart: always
  #   command: [
  #     "celery",
  #     "-A",
  #     "app",
  #     "worker",
  #     "-c",
  #     "1",
  #     "-l",
  #     "INFO",
  #     "--without-heartbeat",
  #     "--without-gossip",
  #     "--without-mingle",
  #   ]
  #   env_file: .env
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=app.settings
  #     - DJANGO_WSGI=app.wsgi
  #     - DEBUG=False
  #   volumes:
  #     - ${PWD}/app:/app
  #   depends_on:
  #     - postgres
  #     - redis

networks:
  default:
